;This file provides a configuration for PHP-FPM (FastCGI Process Manager) that specifies hoe PHP processes should be manages and configured
;Defines how PHP processes should be managed, executed and controlled based on the requirements of the applications running on the server

[www]

user = www-data
group = www-data
listen = 9000
pm = dynamic
pm.max_children = 30
pm.start_servers = 3
pm.min_spare_servers = 3
pm.max_spare_servers = 20
pm.max_requests = 1000
pm.status_path = /status
clear_env = no

;[www]
;Serves as an identifier for a specific poop of PHP-FPM processes
;Each PHP-FPM instance can manage multiple pools and each pool can have its own configuration settings
;So this header indicates thatthe following directives apply to the www pool (which is a group or config set that defined how PHP processes are managed and executed

;user = www-data
;Specifies the user under which PHP-FPM processes should run, www-data is a common user for web server processes on many Linux distributions
;Is a mandatory field

;group = www-data
;Specifies the group under which PHP-FPM processes should run, in this case matches the user, ensuring consistency in permissions
;if not set, will be assumed the default user's group

;listen = 9000
;Defines the address of the port on which PHP-FPM listens for FastCGI requests (protocol for interactive programs with a web server) - TCP socket to all adresses on 9000 port

;pm = dynamic
;Specifies the process manager type - dynamic mode adjust dynamically the nr of child processes based on traffic - there will be at least 1 child with this process management

;pm.max_children = 30
;Maximum nr of children (processes) that can be active at the same time (adjusted based on the server's memory and CPU capacity

;pm.start_servers = 3
;Nr of children processes created on startup or restart

;pm.min_spare_servers = 3
;Minimum nr of children in idle state (spare, waiting to process - should be available to ahndle incoming requests). If the nr of idle processes < than this, then some children will be created

;pm.max_spare_servers = 20
;Max nr of children in idle state. If nr idle processes > than this then children will be killed

;pm.max_requests = 1000
;Nr of requests each child process should execute before respawning (recycle)
;Useful to work around memory leaks and excessive resource usage

;pm.status_path = /status
;Path for the PHP-FPM status page. This page provides info about the PHP-FPM server, including active processes, requests and performance metrics

;clear_env = no
;Determines whether PHP-FPM should clear env variables before executing a service request
;Setting it to no keeps the env variables intact - useful for passing config or sensitive data
