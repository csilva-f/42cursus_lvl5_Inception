# This configuration file for NGINX defines two server blocks: 
# one for HTTP (port 80): which should not work 
# another for HTTPS (port 443): which should be working, as required in the subject

# HTTP BLOCK ----------------------------------------------------------------------------
# Handles routs and requests for HTTP requests
# 1: This block below specifies the port in which the server block will be listenning to HTTP requests - 80
# 2: it specifies the server name for the block, by accessing the value of the respective env variable
# 3: the location block handles all requests to the root (/) URI. Simply returns a 444 status code, which nginx uses to indicate a connection closed without sending a response
# this 444 code means "No Response", indicating that nginx should immediately terminate the connection and close it, without sending any HTTP response (header or body)
# it effectively rejects any HTTP requests to this domain - good to block access to certain URL/paths without specifying why the request was denied

server {
        listen 80;
        server_name $DOMAIN;

        location / {
            return 444;
        }
    }

# HTTPS BLOCK ---------------------------------------------------------------------------
# Configures the behavior of the nginx for requests that match its listen directive and server name
# Specifies that this server block listens on port 443 (HTTPS) for both IPv4 and IPv6 ([::] - any address) connections/interfaces
# It defines the server name and URL that this server will respond to and for which it should handle requests
# It specifies that only TLS version 1.3 will be used for SSL/TLS connections, ensuring modern and secure encryption protocols are used (latest and most secure version) 
# It also specifies the paths to the SSL certificate and SSL private key, used for encrypting HTTPS traffic
# Defines the root directory from which nginx will serve files for this server block (where web files will be stored)
# Defines the order in which nginx should prioritize index files when a directory is requested
# The location blocks define how the server should respond to different types of requests based on URI (Uniform Resource Identifier) or request pattern
# The 1st block defines the behavior for requests not matching any other location block.
# Uses try_files to attempt to serve static files ($uri) or directories ($uri/) and if neither is found, returns a 404 error
# The 2nd block defines the behavior for requests ending with .php
# Checks if the requested file exists, and if not, returns a 404 error
# Forwards PHP requests to a FastCGI server named wordpress, listening on port 9000
# Includes standard FastCGI configurations
# Sets the $SCRIPT_FILENAME parameter for PHP scripts, combining the document root with the script name

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name www.$DOMAIN $DOMAIN;

    ssl_protocols TLSv1.3;

    ssl_certificate /etc/ssl/private/$DOMAIN.crt;
    ssl_certificate_key /etc/ssl/private/$DOMAIN.key;

    root /var/www/ince/;
    index index.php index.html index.htm index.nginx-debian.html;

    location / {
        try_files $uri $uri/ =404;
    }

    location ~ [^/]\.php(/|$) {
        try_files $uri =404;
        fastcgi_pass wordpress:9000;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    }
}
