# DOCKER-COMPOSE file is used to define and run multi-container Docker applications

services:

  # MARIADB ----------------------------------------------------------------------------
  # this container does not depend on any other, so it should be the first to be created

  mariadb:
    # service name
    container_name: mariadb
    image: mariadb
    # relative location of Dockerfile used to build the Docker image for mariadb service; 
    # defines the build process for Docker image
    build:
      context: ./requirements/mariadb
    # location where mariadb DB files will be stored;
    # ensures that data persists across container restarts
    # volume that maps a named volume 'mdbfiles' to the directory /var/lib/mysql/ inside the container
    volumes:
      - mdbfiles:/var/lib/mysql
    ports:
      - '3306:3306'
    # network(s) joined by mariadb
    # the all network should be defined elsewhere in this Docker Compose file
    networks:
      - incep
    #secrets:
    #  - db_password
    #  - db_root_password
    # runs the init.sh (initialization) shell script before starting the main process of the container
    init: true
    # restarts the container when a failure occur (if it exits with a non-zero code) - restart policy
    restart: on-failure
    # file from which to read environment variables
    env_file:
      - .env

  # WORDPRESS --------------------------------------------------------------------------
  # this container depends exclusively on mariadb cmariadb:

  wordpress:
    # service name
    container_name: wordpress
    image: wordpress
    # relative location of Dockerfile used to build the Docker image for wordpress service; 
    # defines the build process for Docker image
    build:
      context: ./requirements/wordpress
    # location where wordpress DB files will be stored;
    # ensures that data persists across container restarts;
    # volume that maps a named volume 'wpfiles' to the directory /var/www/inception/ inside the container
    volumes:
      - wpfiles:/var/www/ince/
    ports:
      - '9000:9000'
    # network(s) joined by wordpress
    # the all network should be defined elsewhere in the Docker Compose file
    networks:
      - incep
    # restarts the container when a failure occur (if it exits with a non-zero code) - restart policy
    restart: on-failure
    # file from which to read environment variables
    env_file:
      - .env
    # all container dependencies for wordpress; 
    # indicates that this container does not start before the mariadb container is running
    depends_on:
      - mariadb

  # NGINX ------------------------------------------------------------------------------
  # this container depends on the wordpress container, so it should start next;
  # uses args to pass the certificate and key path to the Dockerfile
  # in the build moment with show the private informations that where in the .env file
  
  nginx:
    # service name
    container_name: nginx
    image: nginx
    # relative location of Dockerfile used to build the Docker image for nginx service;
    # defines the build process for Docker image
    build:
      # specifies the directory containing the Dockerfile and other important files from the nginx container
      context: ./requirements/nginx
    # maps port 443 on the host machine to port 443 in the container;
    # port 443 is the standard port for HTTPS traffic , commonly used by nginx when serving secure content
    ports:
      - '443:443'
    # location where nginx DB files will be stored;
    # ensures that data persists across container restarts;
    # volume that maps a named volume 'wpfiles' to the directory /var/www/inception/ inside the container
    volumes:
      - wpfiles:/var/www/ince/
    # network used by nginx
    networks:
      - incep
    init: true
    # restarts the container when a failure occur
    restart: on-failure
    # file in which the environment variables can be found
    env_file:
      - .env
    # all container dependencies for nginx;
    # indicates that this container does not start before the wordpress container is running
    depends_on:
      - wordpress

# VOLUMES ---------------------------------------------------------------------------------------
# define volumes used by services for data persistance - keep data consistens between containers
# acts like a shared hard drive between the containers and the host machine
# enables data to be stored outside the container's writable layer, ensuring that data remains intact and available even if the container is stopped, removed or recreated (beyind the container's lifecycle)
# allows decoupling data from containers - makes it easier to update or replace containers withou losing important data

volumes:
  # Maria DB files volume
  # mdbfiles is the name of the volume; it is used by services to refer to this specific volume
  mdbfiles:
    # specifies that the volume uses the local driver;
    # the volume will be stored on the local filesystem of the Docker host
    driver: local
    # provides options for the local driver
    driver_opts:
      # indicates that the volume should not use any specific filesystem type, allowing for a direct bind mount
      type: none
      # specifies that the volume should be a bind mount - directly mounts a directory from the host filesystem into the container
      o: bind
      # specifies the host directory to be mounted;
      # is the path on the host filesystem that will be bound to the volume
      device: /home/csilva-f/data/mdbfiles

  # wordpress files volume
  # wpfiles is the name of the volume; it is used by services to refer to this specific volume
  wpfiles:
    # specifies that the volume uses the local driver - volume stored on the local filesystem of the Docker host
    driver: local
    # options for the local driver
    driver_opts:
      # indicates that the volume should not use any specific filesystem type, allowing direct mount
      type: none
      # specifies that the volume should be a bind mount - directly mounts a directory from the host filesystem into the container
      o: bind
      # specifies the host directory to be mounted;
      # is the path on the host filesystem that will be bound to the volume
      device: /home/csilva-f/data/wpfiles

# NETWORKS --------------------------------------------------------------------------------------
# this section provides a structured way to define and manage networks for the application's containers
# ensures isolation and controls communication between services
# simplifies scaling and service discovery, and allows for custom network configurations
# enhances security, scalability and manageability od the applications
# it acts like a virtual switch between the containers

networks:
  # network name 
  incep:
    # default driver used; enables isolated communication between containers attached to this network on the same Docker host
    driver: bridge

# secrets:
#   db_password:
#     file: ../secrets/db_password
#   db_root_password:
#     file: ../secrets/db_root_password
